# Generated by Django for MPTT migration

from django.db import migrations, models
import mptt.fields
from django.utils import timezone
import django.db.models.deletion

def set_default_mptt_values(apps, schema_editor):
    """Set default MPTT values for existing categories"""
    CategoriaTratamiento = apps.get_model('tratamientos', 'CategoriaTratamiento')
    
    from django.utils.text import slugify
    
    for i, categoria in enumerate(CategoriaTratamiento.objects.all(), 1):
        categoria.level = 0
        categoria.lft = i * 2 - 1
        categoria.rght = i * 2
        categoria.tree_id = i
        
        # Generate unique slug
        if not categoria.slug:
            base_slug = slugify(categoria.nombre) if categoria.nombre else f'categoria-{i}'
            slug = base_slug
            counter = 1
            while CategoriaTratamiento.objects.filter(slug=slug).exclude(pk=categoria.pk).exists():
                slug = f"{base_slug}-{counter}"
                counter += 1
            categoria.slug = slug
        
        categoria.save()

def reverse_mptt_values(apps, schema_editor):
    """Reverse MPTT migration"""
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('tratamientos', '0006_alter_atributocategoriatratamiento_unique_together_and_more'),
    ]

    operations = [
        # Add MPTT fields with defaults
        migrations.AddField(
            model_name='categoriatratamiento',
            name='level',
            field=models.PositiveIntegerField(default=0, editable=False),
        ),
        migrations.AddField(
            model_name='categoriatratamiento',
            name='lft',
            field=models.PositiveIntegerField(default=1, editable=False),
        ),
        migrations.AddField(
            model_name='categoriatratamiento',
            name='rght',
            field=models.PositiveIntegerField(default=2, editable=False),
        ),
        migrations.AddField(
            model_name='categoriatratamiento',
            name='tree_id',
            field=models.PositiveIntegerField(default=1, editable=False),
        ),
        migrations.AddField(
            model_name='categoriatratamiento',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, help_text='Categoría padre en la jerarquía', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='tratamientos.categoriatratamiento', verbose_name='Categoría padre'),
        ),
        migrations.AddField(
            model_name='categoriatratamiento',
            name='slug',
            field=models.SlugField(blank=True, help_text='URL amigable generada automáticamente', max_length=100, verbose_name='URL amigable'),
        ),
        migrations.AddField(
            model_name='categoriatratamiento',
            name='icono',
            field=models.CharField(blank=True, help_text='Icono representativo (emoji o clase CSS)', max_length=50, verbose_name='Icono'),
        ),
        migrations.AddField(
            model_name='categoriatratamiento',
            name='imagen',
            field=models.ImageField(blank=True, help_text='Imagen representativa de la categoría', null=True, upload_to='categorias_tratamientos/', verbose_name='Imagen'),
        ),
        migrations.AddField(
            model_name='categoriatratamiento',
            name='orden',
            field=models.PositiveIntegerField(default=0, help_text='Orden de visualización dentro del mismo nivel', verbose_name='Orden'),
        ),
        migrations.AddField(
            model_name='categoriatratamiento',
            name='meta_titulo',
            field=models.CharField(blank=True, help_text='Título para SEO', max_length=200, verbose_name='Meta título'),
        ),
        migrations.AddField(
            model_name='categoriatratamiento',
            name='meta_descripcion',
            field=models.TextField(blank=True, help_text='Descripción para SEO', verbose_name='Meta descripción'),
        ),
        migrations.AddField(
            model_name='categoriatratamiento',
            name='fecha_creacion',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='categoriatratamiento',
            name='fecha_actualizacion',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        
        # Add new fields to Tratamiento (only the ones that don't exist)
        migrations.AddField(
            model_name='tratamiento',
            name='popular',
            field=models.BooleanField(default=False, help_text='Marca tratamientos populares para destacar', verbose_name='Popular'),
        ),
        migrations.AddField(
            model_name='tratamiento',
            name='orden_visualizacion',
            field=models.PositiveIntegerField(default=0, help_text='Orden en que aparece en listados', verbose_name='Orden de visualización'),
        ),
        
        # Set default MPTT values
        migrations.RunPython(set_default_mptt_values, reverse_mptt_values),
        
        # Update model ordering
        migrations.AlterModelOptions(
            name='categoriatratamiento',
            options={'ordering': ['tree_id', 'lft'], 'verbose_name': 'Categoría de Tratamiento', 'verbose_name_plural': 'Categorías de Tratamientos'},
        ),
        migrations.AlterModelOptions(
            name='tratamiento',
            options={'ordering': ['categoria__tree_id', 'categoria__lft', 'orden_visualizacion', 'nombre'], 'verbose_name': 'Tratamiento', 'verbose_name_plural': 'Tratamientos'},
        ),
    ]
